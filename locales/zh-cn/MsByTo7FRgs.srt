1
00:00:00,420 --> 00:00:03,550
我们已经学习了如何确定实验规模 接下来要学习什么？

2
00:00:03,550 --> 00:00:07,689
我们得将理想规模转变为一系列切实可行的决定

3
00:00:07,689 --> 00:00:11,450
首先 我要持续开展实验多长时间？

4
00:00:11,450 --> 00:00:13,750
第二 我要在什么时候开展实验？

5
00:00:13,750 --> 00:00:16,200
返校时间是不是一个好时机？

6
00:00:16,200 --> 00:00:17,338
节假日呢？

7
00:00:17,338 --> 00:00:19,860
它会不会与其他一些重要活动有冲突？

8
00:00:19,860 --> 00:00:23,090
第三 你得考虑要在实验期间

9
00:00:23,090 --> 00:00:24,970
发送多少比例的流量

10
00:00:24,970 --> 00:00:28,120
这些因素彼此相关 可帮助你计算理想规模

11
00:00:28,120 --> 00:00:30,170
但你得单独考虑它们中的每一项

12
00:00:30,170 --> 00:00:31,210
我觉得前两点很有道理

13
00:00:31,210 --> 00:00:33,750
你可以详细讲解一下第三点吗？

14
00:00:33,750 --> 00:00:34,290
好的

15
00:00:34,290 --> 00:00:37,250
假设分组单元为 cookie

16
00:00:37,250 --> 00:00:40,160
我们关注的是

17
00:00:40,160 --> 00:00:42,860
在指定一天中有多少比例的 cookie

18
00:00:42,860 --> 00:00:43,871
将发送至实验组和对照组？

19
00:00:45,050 --> 00:00:49,435
假设我们需要为实验组和对照组采集

20
00:00:49,435 --> 00:00:51,160
共计 100 万个 cookie

21
00:00:51,160 --> 00:00:55,850
如果在指定某天中只有 100,000 个 cookie 访问你的网站

22
00:00:55,850 --> 00:00:58,690
假设你将 50% 的流量

23
00:00:58,690 --> 00:01:00,645
发送给实验组

24
00:01:00,645 --> 00:01:05,360
将剩余 50% 的流量发送给对照组 那么你的实验需要持续十天

25
00:01:05,360 --> 00:01:09,010
另一种方案是向实验中的每个组发送 25% 的流量

26
00:01:09,010 --> 00:01:11,010
因为你还想执行其他测试

27
00:01:11,010 --> 00:01:14,060
这时 你的实验需要持续开展 20 天 而不是之前的 10 天

28
00:01:14,060 --> 00:01:17,560
实验持续时间与你在实验期间所发送的流量比例

29
00:01:17,560 --> 00:01:19,840
的关系就是这样

30
00:01:19,840 --> 00:01:22,530
你为什么不总是针对所有流量开展实验？

31
00:01:22,530 --> 00:01:24,150
这样不是能更快获得结果吗？

32
00:01:24,150 --> 00:01:25,810
原因有好几个

33
00:01:25,810 --> 00:01:28,140
首先是安全性 我们之前曾提及这一点

34
00:01:28,140 --> 00:01:32,370
在推出新的用户界面功能时 你不确定它是否能在所有浏览器中正常运行

35
00:01:32,370 --> 00:01:35,630
也许你能确定这一点

36
00:01:35,630 --> 00:01:37,220
但你想测试一下

37
00:01:37,220 --> 00:01:39,530
你也不确定用户将有什么反应

38
00:01:39,530 --> 00:01:41,250
他们可能会觉得新功能不好用

39
00:01:41,250 --> 00:01:42,360
新功能可能没有你设想般完美

40
00:01:42,360 --> 00:01:45,607
所以你可能想让网站基本维持现状

41
00:01:45,607 --> 00:01:49,950
仅向部分用户开展实验 直到你获得满意结果

42
00:01:49,950 --> 00:01:52,210
第二个原因是压力

43
00:01:52,210 --> 00:01:53,390
假设你推出了一个新功能

44
00:01:53,390 --> 00:01:55,620
但你不确定将来是不是会保留它

45
00:01:55,620 --> 00:01:58,760
当你还不确定是否要将这个功能在网站上线的时候

46
00:01:58,760 --> 00:02:02,110
你会希望很多人看到它并在博客上大肆宣扬吗？

47
00:02:02,110 --> 00:02:06,550
另一个理由是 现在我们随机分配分组单元

48
00:02:06,550 --> 00:02:08,979
但问题是

49
00:02:08,979 --> 00:02:12,470
还有什么因素会实际影响结果的差异性？

50
00:02:12,470 --> 00:02:16,050
Carrie 在这个视频开始的时候提到了一些因素

51
00:02:16,050 --> 00:02:18,290
例如 如何遇到节假日怎么办？

52
00:02:18,290 --> 00:02:21,244
在采用一半一半的流量分配开展实验时

53
00:02:21,244 --> 00:02:24,740
你将采集一天中的所有数据

54
00:02:24,740 --> 00:02:28,390
但如果这一天是节假日 你会希望用这天的数据来做决策吗？

55
00:02:28,390 --> 00:02:32,340
另一个更常见的情景是

56
00:02:32,340 --> 00:02:33,710
工作日与周末的行为通常存在很大差异

57
00:02:33,710 --> 00:02:37,555
所以以你可能会倾向于针对较小比例的流量开展一个持续多天的实验

58
00:02:37,555 --> 00:02:40,992
从而了解工作日与周末、节假日

59
00:02:40,992 --> 00:02:44,777
以及一天中的不同时段之间的差异

60
00:02:44,777 --> 00:02:49,440
以及所有其他可能导致差异性的因素

61
00:02:49,440 --> 00:02:52,750
另一个方案是 你可以在公司开展多个实验任务

62
00:02:52,750 --> 00:02:55,900
或者针对相同功能开展多个实验任务

63
00:02:55,900 --> 00:02:59,840
并为不同任务设置不同水平的参数 或者针对相同功能的不同类型开展实验

64
00:02:59,840 --> 00:03:03,230
如果你想直接对比这些方面

65
00:03:03,230 --> 00:03:07,660
就简单的方式就是针对较小比例的流量同时开展这些实验

66
00:03:07,660 --> 00:03:10,930
当其中一个测试受节假日或流量的某个奇怪变化影响时

67
00:03:10,930 --> 00:03:14,530
所有测试都会有相同反应

68
00:03:14,530 --> 00:03:17,278
你就能对比这些有着相对顺序的测试了

69
00:03:17,278 --> 00:03:18,169
明白了
