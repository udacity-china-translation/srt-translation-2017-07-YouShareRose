1
00:00:00,400 --> 00:00:04,160
第一例中 用户可能感知不到视频加载速度是快是慢

2
00:00:04,160 --> 00:00:09,420
所以可以采用基于事件的分组

3
00:00:09,420 --> 00:00:13,380
Diane 说过 就算用户感知不到变化

4
00:00:13,380 --> 00:00:15,730
这种情况下 或许也有一定学习效果

5
00:00:15,730 --> 00:00:19,180
这时你会转换为基于 cookie 的分组

6
00:00:19,180 --> 00:00:22,190
但特别对短期实验 基于事件的分组会是个好的开始

7
00:00:23,240 --> 00:00:26,310
第二例中 如果每次刷新页面按钮都在变

8
00:00:26,310 --> 00:00:28,880
那它会大大地分散注意力

9
00:00:28,880 --> 00:00:32,040
那么基于事件的分组就不太合适

10
00:00:32,040 --> 00:00:34,760
基于 cookie 的分组也许才算满足要求

11
00:00:34,760 --> 00:00:37,490
如果按钮在不同设备上显示不一 这并无大碍

12
00:00:37,490 --> 00:00:40,735
因为不同设备上的 UI 界面总有细微差别

13
00:00:40,735 --> 00:00:45,860
和第一例相似 第三例中大多用户不会注意到排序变化

14
00:00:45,860 --> 00:00:48,760
所以可以从基于事件的分组开始

15
00:00:48,760 --> 00:00:52,040
同样 如果你发现存在学习效果 可能就有必要改为

16
00:00:52,040 --> 00:00:53,220
基于 cookie 的分组

17
00:00:53,220 --> 00:00:56,135
第四例一定会被用户察觉

18
00:00:56,135 --> 00:01:00,360
在这 如果你想确定此变化是否会影响试题通过率

19
00:01:00,360 --> 00:01:03,660
设备间的一致性同样重要

20
00:01:03,660 --> 00:01:06,870
如果学生在手机上看视频 之后在电脑完成试题

21
00:01:06,870 --> 00:01:11,220
你会需要他们两次登录后仍分在同一分组

22
00:01:11,220 --> 00:01:14,370
因此 这里你需要基于用户 ID 分组
